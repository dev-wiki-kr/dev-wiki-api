name: CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_KEY }}
          port: 22
          script: |
            echo $DB_HOST >> .env.production
            echo $DB_NAME >> .env.production
            echo $DB_PASSWORD >> .env.production
            echo $DB_PORT >> .env.production
            echo $DB_SYNCHRONIZE >> .env.production
            echo $DB_USERNAME >> .env.production
            echo $POSTGRES_DB >> .env.production
            echo $POSTGRES_PASSWORD >> .env.production
            echo $POSTGRES_USER >> .env.production

            echo $DB_HOST >> .env.development
            echo $DB_NAME >> .env.development
            echo $DB_PASSWORD >> .env.development
            echo $DB_PORT >> .env.development
            echo $DB_SYNCHRONIZE >> .env.development
            echo $DB_USERNAM >> .env.development
            echo $POSTGRES_DB >> .env.development
            echo $POSTGRES_PASSWORD >> .env.development
            echo $POSTGRES_USER >> .env.development


            git pull origin main && chmod +x deploy.sh && /bin/bash deploy.sh
          env: |
            DB_USERNAME: ${{ secrets.DB_USERNAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_SYNCHRONIZE: ${{ secrets.DB_SYNCHRONIZE }}
            DB_PORT: ${{ secrets.DB_PORT }}
            DB_NAME: ${{ secrets.DB_USERNAME }}
            DB_HOST: ${{ secrets.DB_HOST }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
